plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.9'
    id 'org.beryx.runtime' version '1.11.4'
    id 'idea'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.jfoenix:jfoenix:9.0.10'
    implementation 'com.h2database:h2:1.4.200'
    implementation 'com.profesorfalken:jPowerShell:3.1.1'
    implementation 'org.json:json:20131018'
    implementation 'org.apache.ftpserver:ftpserver:1.1.1'
    implementation 'com.github.oshi:oshi-core:5.7.0'
    implementation project(':Shared')

    testImplementation(platform('org.junit:junit-bom:5.7.1'))
    testImplementation('org.junit.jupiter:junit-jupiter:5.7.1')
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.7.1")
}

// Project variables
def projectJvmArgs = [
        "--add-exports=javafx.graphics/com.sun.javafx.scene=ALL-UNNAMED",
        "--illegal-access=permit",
        "-Xmx256m"
]

def projectAppName = 'OpenRAMT-Server'
def projectAppVersion = '1.0.0'
def projectAppDescription = 'A open source Remote Acess & Monitoring Tool (OpenRAMT) server.'

def testDir = projectDir.getAbsolutePath() + "/test"
//

task prepareTestDir {
    doFirst {
        if (new File(testDir).exists()) {
            delete testDir
        }
        mkdir testDir
    }
}

test {
    useJUnitPlatform()

    testLogging {
        events "passed", "skipped", "failed"
    }

    workingDir = testDir
}
tasks["test"].dependsOn(prepareTestDir)

javafx {
    modules = ['javafx.controls', 'javafx.fxml']
    version = '15.0.1'
}

application {
    mainClass.set("application.Launcher")
    applicationName = projectAppName
}

run {
    jvmArgs = projectJvmArgs
}

runtime {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        noConsole = true
        jvmArgs = projectJvmArgs
    }
    jpackage {
        def currentOs = org.gradle.internal.os.OperatingSystem.current()
        def imgType = currentOs.windows ? 'ico' : currentOs.macOsX ? 'icns' : 'png'
        imageOptions += ['--icon', "src/main/resources/openramt.$imgType"]
        installerOptions += ['--vendor', 'Nex-Coder']
        installerOptions += ['--resource-dir', "build/jpackage/OpenRAMT-Server/lib"]
        imageName = projectAppName // Should be the same
        installerName = projectAppName
        appVersion = projectAppVersion
        //imageOutputDir = ''
        //installerOutputDir = ''
        //skipInstaller = true // create just app image

        if(currentOs.windows) {
            installerOptions += ['--win-per-user-install', '--win-dir-chooser', '--win-menu', '--win-shortcut']
            installerType = 'msi'
        }
        else if (currentOs.linux) {
            installerOptions += [
                    '--linux-menu-group', 'Utility',
                    '--description', projectAppDescription,
                    '--app-version', projectAppVersion,
                    '--linux-shortcut',
                    '--linux-deb-maintainer', 'nex@nexhub.co.uk',
                    '--linux-rpm-license-type', 'MIT',
        ]
            installerType = 'deb'
        }
        else if (currentOs.macOsX) {
            installerOptions += ['--mac-package-name', projectAppName]
            installerType = 'dmg'
        }
    }
}